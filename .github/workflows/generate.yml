name: Generate
on:
  workflow_dispatch:
    inputs:
      release:
        type: choice
        description: What version to generate
        options:
        - build8193.36
        - build8193.35
        - build8193.34
        - build8193.32
        - build8193.31
        - build8193.30
        - build8193.29
        - build8193.28
        - build8193.27
        - build8193.26
        - build8193.25
        required: true
jobs:
  generate:
    name: Generate ${{ github.event.inputs.release }} nwn files
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: "Checkout source code"
        uses: "actions/checkout@v3"
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_ACCESS_TOKEN  }}
      - uses: jiro4989/setup-nim-action@v1
      - run: nimble install neverwinter -y          
      - name: Clone SteamRE/DepotDownloader
        run: |
          gh repo clone SteamRE/DepotDownloader
      - name: Download nwn:ee files
        run: |
          cd DepotDownloader/DepotDownloader
          if [ "${{ github.event.inputs.release }}" = "build8193.36" ]; then
            dotnet run -app 704450 -depot 704451 -beta preview -betapassword previewpreview -username ${{ secrets.STEAM_USER }} -password ${{ secrets.STEAM_PASS }}
          else
            dotnet run -app 704450 -depot 704451 -beta ${{ github.event.inputs.release }} -username ${{ secrets.STEAM_USER }} -password ${{ secrets.STEAM_PASS }}
          fi
          
          dir_name=""
          for dir in depots/704451/*; do
            if [ -d "$dir" ]; then
              dir_name=$(basename "$dir")
              echo "$dir_name"
            fi
          done

          cd ${{ env.GITHUB_WORKSPACE }}
          mkdir unpacked 2da bic dds dlg dwk git gff gui ids ini itp ltr jrl mdl mod mtr nss plt ptt pwk set shd ssf tga tlk utc utd ute uti utm utp uts utt utw wok
          nwn_key_unpack "DepotDownloader/DepotDownloader/depots/704451/$dir_name/data/nwn_base.key" unpacked/
          cp -r "DepotDownloader/DepotDownloader/depots/704451/$dir_name/lang/en/docs/" docs/
          cp -r "DepotDownloader/DepotDownloader/depots/704451/$dir_name/ovr/" ovr/
      - name: Gather files and create zip archives
        run: |
          file_types=("2da" "dds" "bic" "dlg" "docs" "dwk" "gff" "gui" "ids" "ini" "itp" "ltr" "mdl" "mod" "mtr" "nss" "plt" "ovr" "ptt" "pwk" "set" "shd" "ssf" "tga" "tlk" "ute" "utc" "utd" "uti" "utm" "utp" "uts" "utt" "utw" "wok")

          for file_type in "${file_types[@]}"; do
            find ./ -name "*.$file_type" -exec cp -prv '{}' "$file_type/" ';'
            cd "$file_type" && zip -r "../${file_type}.zip" .
            cd ..
          done
      - name: Upload zip archives as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: file-archives
          path: |
            2da.zip
            dds.zip
            bic.zip
            dlg.zip
            docs.zip
            dwk.zip
            gff.zip
            gui.zip
            ids.zip
            ini.zip
            itp.zip
            ltr.zip
            mdl.zip
            mod.zip
            mtr.zip
            nss.zip
            plt.zip
            ovr.zip
            ptt.zip
            pwk.zip
            set.zip
            shd.zip
            ssf.zip
            tga.zip
            tlk.zip
            ute.zip
            utc.zip
            utd.zip
            uti.zip
            utm.zip
            utp.zip
            uts.zip
            utt.zip
            utw.zip
            wok.zip
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          tag_name: release/${{ github.event.inputs.release }}
          prerelease: ${{ github.event.inputs.release == 'build8193.36' }}
          files: |
            2da.zip
            bic.zip
            dds.zip
            dlg.zip
            docs.zip
            dwk.zip
            gff.zip
            gui.zip
            ids.zip
            ini.zip
            itp.zip
            ltr.zip
            mdl.zip
            mod.zip
            mtr.zip
            nss.zip
            ovr.zip
            plt.zip
            ptt.zip
            pwk.zip
            set.zip
            shd.zip
            ssf.zip
            tga.zip
            tlk.zip
            utc.zip
            utd.zip
            ute.zip
            uti.zip
            utm.zip
            utp.zip
            uts.zip
            utt.zip
            utw.zip
            wok.zip
  git:
    name: ${{ matrix.type }} ${{ github.event.inputs.release }} git
    runs-on: ubuntu-latest
    needs: generate
    strategy:
      matrix:
        type: [2da, bic, dds, dlg, docs, dwk, gff, gui, ids, ini, itp, ltr, mdl, mod, mtr, nss, ovr, plt, ptt, pwk, set, shd, ssf, tga, tlk, utc, utd, ute, uti, utm, utp, uts, utt, utw, wok]
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: "Checkout source code"
        uses: "actions/checkout@v3"
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_ACCESS_TOKEN  }}
      - uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.type }}
      - name: Extract some files
        run: |
          7z x ${{ matrix.type }}.zip
      - uses: EndBug/add-and-commit@v9
        with:
          message: 'CI: ${{ github.event.inputs.release }}'
          new_branch: '${{ github.event.inputs.release }}/${{ matrix.type }}'
          committer_name: GitHub Actions
          committer_email: 41898282+github-actions[bot]@users.noreply.github.com
