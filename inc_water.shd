//=============================================================================
//
// inc_water.shd
//
//=============================================================================


///////////////////////////////////
//
// BEGIN INC_WATER
//
///////////////////////////////////

//
// CONFIG
//
// Global speed-up or slowdown for animations
#define ANIMATION_SPEED_MULTIPLIER 1.0

// Recommended values 1..10, higher is prettier but slower.
#define WAVE_ITERATIONS 3

#define WATER_TRANSPARENCY_FACTOR 0.25
#define WATER_SPECULARITY 0.02
// Makes water displacement affect written depth too. Can break legacy content.
#define WATER_DYNAMIC_DEPTH 0

#define WATER_REFRACTION_ITERATIONS 5


// Max vertical range (depth) of tracing refraction.
#define WATER_REFRACTION_MAX_RANGE 4.0


#define FOG 1
#define KEYHOLING 1
#define LIGHTING 1

#define NORMAL_MAP 0
#define SPECULAR_MAP 0
#define ROUGHNESS_MAP 0
#define HEIGHT_MAP 0
#define SELF_ILLUMINATION_MAP 0
#define ENVIRONMENT_MAP 1

#define FRAGMENT_NORMAL 1
#define VERTEX_NORMAL 1
#define MATERIAL_ROUGHNESS_OVERRIDE 1
#define MATERIAL_SPECULARITY_OVERRIDE 1
#define MATERIAL_METALICNESS_OVERRIDE 1
#define MATERIAL_SPECULAR_COLOR_OVERRIDE 1

#include "inc_config"

#undef FRAGMENT_LIGHTING
#define FRAGMENT_LIGHTING 1

#if SHADER_TYPE == 2
	#if SHADER_QUALITY_MODE > 1
		#define LIGHT_SUBSURFACE_SCATTERING 1
		#define LIGHT_SUBSURFACE_SCATTERING_WRAP 1.0
	#else
		#undef SPECULAR_FRESNEL
		#define SPECULAR_FRESNEL 2
	#endif
#endif

#define POSITION_WORLD 1

#include "inc_standard"

uniform int sceneCurrentFrame;
uniform int worldtimerTimeOfDay;
uniform int moduleYear;
uniform int moduleMonth;
uniform int moduleDay;
uniform int moduleHour;

const int MAX_WINDS=32;
uniform int windPointSourcesCount;
uniform vec3 windPointSourcesPosition[MAX_WINDS];
uniform float windPointSourcesRadius[MAX_WINDS];
uniform float windPointSourcesDuration[MAX_WINDS];
uniform float windPointSourcesIntensity[MAX_WINDS];
uniform float windPointSourcesTimeRemaining[MAX_WINDS];

uniform int moduleDawnHour;
uniform int moduleDuskHour;
uniform int moduleMinutesPerHour;

uniform vec3 areaGlobalWind;
uniform float areaWeatherDensity;
#define NWAREA_FLAG_INTERIOR            0x0001
#define NWAREA_FLAG_UNDERGROUND         0x0002
#define NWAREA_FLAG_NATURAL             0x0004
uniform int areaFlags;
#define NWAREA_WEATHER_CLEAR            0
#define NWAREA_WEATHER_RAIN             1
#define NWAREA_WEATHER_SNOW             2
uniform int areaWeatherType;


varying float fTick;
varying float fAreaWindForce;

varying vec3 vAreaWindDirection;
varying vec3 vWaterSurfaceAreaWindOffset;
